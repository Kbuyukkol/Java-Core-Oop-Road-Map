Abstraction Class Notes


Abstraction: is concentrating on essential/important things and not worrying about details.

			 is concentrating on name of the action/behaviour, without thinking about implementation


Vehicle
	- move
	- stop 
	- turn
	- addfuel
	....
	
-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Abstraction can be done in 2 ways: Abstract classes, Interface 

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Abstraction helps with "organizing the code", "reusing the code", "less duplicate code",

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can we instantiate abstract class?
	- No we can not create object from abstract class

	public abstract class Browser{}

	Browser browser = new Browser(); //Error

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

What is Abstract Method?
	- is a method without body/implementation. Can be placed in abstract class or interface

	public abstract class Browser{
		public abstract void navigate(String url);
		public abstract void displayWebpage();
	}

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Where do you add implementation? 
	- Is added in first concrete class
	- While adding implementation, all overriding rules should be followed.

	public class Netscape extends Browser{
		public abstract void navigate(String url){
			//code
		}
		public abstract void displayWebpage(){
			//code
		}

	}

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can we add non-abstract method in abstract class?
	- Yes we can. Abstract class can have both abstract method and non-abstract method

	public abstract class Browser{
		public abstract void navigate(String url);
		public abstract void displayWebpage();
		public void close(){
			//code
		}
	}
	
-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Is it mendatory for abstract class to have abstract method?
	- No it is not. Abstract class can have 0 abstract method.

	public abstract class Browser{
		public void close(){
			//code
		}
	}

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can we add constructor in abstract class?
	- Yes we can. 

	public abstract class Browser {
	
		public Browser() {
			System.out.println("Creating a browser");
		}
	}

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

If we can not instantiate abstract class, how we can call the constructor?
	- The constructor of abstract class can be called from a subclass using super keyword.

	public abstract class Browser {
	
		public Browser() {
			System.out.println("Creating a browser");
		}
	}

	public class Netscape extends Browser{

		public Netscape(){
			super();
		}
	}

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can you add instance or static variables into abstract class?
	- Yes we can have instance variables in abstract class

		public abstract class Browser {

		String name;
		static int id;
	
		public Browser() {
			System.out.println("Creating a browser");
		}
	}

	- Variables can not be abstract
		abstract int id; //Error

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can you add instance or static init block?
	- Yes we can 
	
-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can an abstract class extend another abstract class?
	- Yes it can 

	public abstract class A{}
    public abstract class B extends A{}

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can an abstract class extend another non-abstract class?
	- Yes it can 

	public class A{}
    public abstract class B extends A{}

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can a class extends multiple abstract classes?
    - No it can not

    public abstract class A{}
    public abstract class B{}

    public class C extends A,B{} //Error

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can we add static method into abstract class?
	- yes we can 

	    public abstract class A{

	    	public static void methodX(){

	    	}
	    }

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can a method be abstract and final in abstract class?
	- No it can not 

	public abstract class Browser{
		public abstract final void navigate(String url); //Error
		public abstract void displayWebpage();
	}


-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

Can abstract method be protected, private, and default?
	- private: no
	- default: yes 
	- protected: yes

-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----o-----

When an abstract class extends another abstract class, does it require to override/implement abstract methods from parent?
	- No it does not require
	- First concrete sub class is required to implement all abstract methods

public abstract class Phone{
	public abstract void call(){}
}

public abstract class MobilePhone extends Phone{
	public abstract void text();

}

public Nokia extends MobilePhone{
	public void call(){
		//code
	}

	public void text(){
		//code
	}
}

public Iphone extends MobilePhone{
	public void call(){
		//code
	}

	public void text(){
		//code
	}

}

public IphoneX extends Iphone{
	//no required to override 
}
